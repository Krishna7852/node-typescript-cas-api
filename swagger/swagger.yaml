openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
paths:
  /users:
    get:
      summary: Retrieve all users (Admin/Manager only)
      responses:
        200:
          description: A list of users
    post:
      summary: Create a new user (Admin/Manager only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                role:
                  type: string
      responses:
        201:
          description: User created successfully
        400:
          description: User already exists
  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        200:
          description: User found
        404:
          description: User not found
    put:
      summary: Update user
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found
    delete:
      summary: Delete user (Admin only)
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        204:
          description: User deleted successfully
        404:
          description: User not found
  /users/{userId}/role:
    put:
      summary: Update user role (Admin only)
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
      responses:
        200:
          description: User role updated successfully
        404:
          description: User not found
        400:
          description: Invalid role
  /users/me:
    get:
      summary: Get current user profile
      responses:
        200:
          description: Current user profile retrieved successfully
        404:
          description: User not found
    put:
      summary: Update current user's profile
      responses:
        200:
          description: User profile updated successfully
        404:
          description: User not found

  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        201:
          description: User created successfully
        400:
          description: User already exists

  /auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /auth/validate-token:
    get:
      summary: Validate user token
      responses:
        200:
          description: Token is valid
        401:
          description: User not authenticated

  /auth/user-details:
    get:
      summary: Get user details
      responses:
        200:
          description: User details retrieved successfully
        401:
          description: User not authenticated
        404:
          description: User not found

  /auth/me:
    get:
      summary: Retrieve details of the authenticated user
      description: Get user details
      responses:
        200:
          description: User details retrieved successfully
        401:
          description: User not authenticated

  /auth/validate:
    get:
      summary: Validate the user's token
      description: Check if the token is valid
      responses:
        200:
          description: Token is valid
        401:
          description: User not authenticated
