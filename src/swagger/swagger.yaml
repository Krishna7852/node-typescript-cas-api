openapi: 3.0.0
info:
  title: Authentication API
  description: API documentation for authentication service
  version: 1.0.0
  contact:
    email: your.email@example.com

servers:
  - url: http://localhost:3000/api
    description: Local development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The user ID
        username:
          type: string
          description: The username
        email:
          type: string
          format: email
          description: The user's email
    
    TokenResponse:
      type: object
      properties:
        message:
          type: string
          description: Response message
        accessToken:
          type: string
          description: JWT access token
        refreshToken:
          type: string
          description: JWT refresh token
        user:
          $ref: '#/components/schemas/User'
    
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: SecurePassword123!
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad request (e.g., user already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticate user and get tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - required:
                    - email
                    - password
                - required:
                    - username
                    - password
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: SecurePassword123!
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/validate-token:
    get:
      tags:
        - Authentication
      summary: Validate token
      description: Validate the current access token
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token is valid
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/user:
    get:
      tags:
        - User
      summary: Get user details
      description: Get detailed information about the authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User details retrieved successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: The user ID
                      username:
                        type: string
                        description: The username
                      email:
                        type: string
                        format: email
                        description: The user's email
                      createdAt:
                        type: string
                        format: date-time
                        description: Account creation timestamp
                      updatedAt:
                        type: string
                        format: date-time
                        description: Account last update timestamp
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
